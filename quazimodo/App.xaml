<?xml version="1.0" encoding="utf-8"?>

<Application
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:viewModels="clr-namespace:quazimodo.ViewModels;assembly=quazimodo"
    xmlns:constants1="clr-namespace:quazimodo.Utilities.Constants;assembly=quazimodo"
    x:Class="quazimodo.App">
    <Application.Resources>
        
        <!-- Constants -->
        <x:Double x:Key="emojiOffset">5</x:Double>
        <x:Double x:Key="emojiSize">40</x:Double>
        <x:Double x:Key="emojiBorderWidth">1</x:Double>
        <x:Double x:Key="bigButtonSize">100</x:Double>
        <x:Double x:Key="middleButtonSize">80</x:Double>
        <x:Double x:Key="imageSize">60</x:Double>
        <x:Double x:Key="bigButtonSpacing">10</x:Double>
        <x:Double x:Key="titleFontSize">20</x:Double>
        <x:Double x:Key="defaultOffset">20</x:Double>
        <x:Double x:Key="bigFontSize">22</x:Double>
        <x:Double x:Key="middleFontSize">16</x:Double>
        <x:Double x:Key="borderSize">1</x:Double>
        <x:Double x:Key="progressViewSize">300</x:Double>
        <x:Int32 x:Key="defaultCorner">10</x:Int32>
        
        <GridLength x:Key="bigButton">100</GridLength>
        
        <!-- Color -->
        <Color x:Key="lightOrange">#cbae8270</Color>
        <Color x:Key="lightGray">#bec5b7</Color>
        <Color x:Key="lightYellow">#a69b9770</Color>
        <Color x:Key="darkPurple">#303030</Color>
        <Color x:Key="grafit">#595959</Color>
        <Color x:Key="white1">#ffffe4</Color>
        <Color x:Key="white2">#ffffff</Color>
        <Color x:Key="white3">#fffffb</Color>
        <Color x:Key="white4">#f1f8e9</Color>
        <Color x:Key="white5">#d7ccc8</Color>
        <Color x:Key="white6">#ffe0b2</Color>
        <Color x:Key="white7">Beige</Color>
        <Color x:Key="black1">Black</Color>
        <Color x:Key="red">Red</Color>
        
        <!--IconFonts-->
        <OnPlatform x:Key="icomoonFont" x:TypeArguments="x:String">
            <On Platform="Android" Value="icomoon.ttf#icomoon"/>
            <On Platform="iOS" Value="icomoon"/>
        </OnPlatform>
        
        <x:FontImage x:Key="plusFontImage"
                     FontFamily="{StaticResource icomoonFont}"
                     Size="44"
                     Color="{StaticResource red}"
                     Glyph="{x:Static constants1:FontIcons.folderPlus}" />
        
        <!-- Styles -->
        <Style x:Key="emojiBaseItem" x:DataType="viewModels:ButtonSmileViewModel" TargetType="ImageButton">
            <Setter Property="HeightRequest" Value="{StaticResource emojiSize}" />
            <Setter Property="WidthRequest" Value="{StaticResource emojiSize}" />
            <Setter Property="Padding" Value="{StaticResource emojiOffset}" />
            <Setter Property="Margin" Value="{StaticResource emojiOffset}" />
            <Setter Property="BorderWidth" Value="{StaticResource emojiBorderWidth}" />
            <Setter Property="Aspect" Value="AspectFit" />
            <Setter Property="Source" Value="{Binding Image}" />
            <Style.Triggers>
                <DataTrigger TargetType="ImageButton"
                             Binding="{Binding IsPlaying}"
                             Value="true">
                    <Setter Property="BackgroundColor" Value="{StaticResource darkPurple}" />
                    <Setter Property="BorderColor" Value="{StaticResource red}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="positiveEmojiItem" TargetType="ImageButton" BasedOn="{StaticResource emojiBaseItem}">
            <Setter Property="BackgroundColor" Value="{StaticResource lightOrange}" />
            <Setter Property="BorderColor" Value="{StaticResource white1}" />
            <Setter Property="Command" Value="{Binding PositiveMusicBtnClickCommand}" />
            <Style.Triggers>
                <DataTrigger TargetType="ImageButton"
                             Binding="{Binding IsPlaying}"
                             Value="false">
                    <Setter Property="BackgroundColor" Value="{StaticResource lightOrange}" />
                    <Setter Property="BorderColor" Value="{StaticResource white1}" />
                </DataTrigger>
                <DataTrigger TargetType="ImageButton"
                             Binding="{Binding IsPlusButton}"
                             Value="false">
                    <Setter Property="BackgroundColor" Value="{StaticResource lightOrange}" />
                    <Setter Property="BorderColor" Value="{StaticResource white1}" />
                </DataTrigger>
                <DataTrigger TargetType="ImageButton"
                             Binding="{Binding IsPlusButton}"
                             Value="true">
                    <Setter Property="BackgroundColor" Value="Transparent" />
                    <Setter Property="BorderColor" Value="Transparent" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="neutralEmojiItem" TargetType="ImageButton" BasedOn="{StaticResource emojiBaseItem}">
            <Setter Property="BackgroundColor" Value="{StaticResource lightGray}" />
            <Setter Property="BorderColor" Value="{StaticResource white2}" />
            <Style.Triggers>
                <DataTrigger TargetType="ImageButton"
                             Binding="{Binding IsPlaying}"
                             Value="false">
                    <Setter Property="BackgroundColor" Value="{StaticResource lightGray}" />
                    <Setter Property="BorderColor" Value="{StaticResource white1}" />
                </DataTrigger>
                <DataTrigger TargetType="ImageButton"
                             Binding="{Binding IsPlusButton}"
                             Value="false">
                    <Setter Property="BackgroundColor" Value="{StaticResource lightGray}" />
                    <Setter Property="BorderColor" Value="{StaticResource white1}" />
                </DataTrigger>
                <DataTrigger TargetType="ImageButton"
                             Binding="{Binding IsPlusButton}"
                             Value="true">
                    <Setter Property="BackgroundColor" Value="Transparent" />
                    <Setter Property="BorderColor" Value="Transparent" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="negativeEmojiItem" TargetType="ImageButton" BasedOn="{StaticResource emojiBaseItem}">
            <Setter Property="BackgroundColor" Value="{StaticResource lightYellow}" />
            <Setter Property="BorderColor" Value="{StaticResource white3}" />
            <Setter Property="Command" Value="{Binding NegativeMusicBtnClickCommand}" />
            <Style.Triggers>
                <DataTrigger TargetType="ImageButton"
                             Binding="{Binding IsPlaying}"
                             Value="false">
                    <Setter Property="BackgroundColor" Value="{StaticResource lightYellow}" />
                    <Setter Property="BorderColor" Value="{StaticResource white3}" />
                </DataTrigger>
                <DataTrigger TargetType="ImageButton"
                             Binding="{Binding IsPlusButton}"
                             Value="false">
                    <Setter Property="BackgroundColor" Value="{StaticResource lightYellow}" />
                    <Setter Property="BorderColor" Value="{StaticResource white3}" />
                </DataTrigger>
                <DataTrigger TargetType="ImageButton"
                             Binding="{Binding IsPlusButton}"
                             Value="true">
                    <Setter Property="BackgroundColor" Value="Transparent" />
                    <Setter Property="BorderColor" Value="Transparent" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="acceptButtonStyle" TargetType="ImageButton">
            <Setter Property="BackgroundColor" Value="{StaticResource grafit}" />
            <Setter Property="BorderColor" Value="{StaticResource white3}" />
            <Setter Property="HeightRequest" Value="{StaticResource bigButtonSize}" />
            <Setter Property="WidthRequest" Value="{StaticResource bigButtonSize}" />
            <Setter Property="Padding" Value="{StaticResource bigButtonSpacing}" />
            <Setter Property="CornerRadius" Value="{StaticResource bigButtonSpacing}" />
            <Setter Property="Command" Value="{Binding SoundBtnClickCommand}" />
            <Setter Property="Aspect" Value="AspectFit" />
        </Style>
        <Style x:Key="soundCategoryStyle" TargetType="Label">
            <Setter Property="VerticalTextAlignment" Value="Center" />
            <Setter Property="FontSize" Value="{StaticResource titleFontSize}" />
        </Style>
        <Style x:Key="borderedRedButtonStyle" TargetType="Button">
            <Setter Property="HeightRequest" Value="50" />
            <Setter Property="VerticalOptions" Value="End" />
            <Setter Property="BackgroundColor" Value="Transparent" />
            <Setter Property="BorderWidth" Value="1" />
            <Setter Property="BorderColor" Value="{StaticResource red}" />
            <Setter Property="CornerRadius" Value="10" />
            <Setter Property="Margin" Value="10,10,0,10" />
        </Style>
        <Style x:Key="customSoundItem" TargetType="Button">
            <Setter Property="BackgroundColor" Value="#a69b9770" />
            <Setter Property="HeightRequest" Value="40" />
            <Setter Property="WidthRequest" Value="40" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="BorderColor" Value="#fffffb" />
            <Setter Property="BorderWidth" Value="1" />
            <Setter Property="Command" Value="{Binding MusicBtnClickCommand}" />
        </Style>
        <Style x:Key="borderedButtonStyle" TargetType="Button">
            <Setter Property="TextColor" Value="{StaticResource white7}" />
            <Setter Property="BackgroundColor" Value="{StaticResource darkPurple}" />
            <Setter Property="BorderColor" Value="{StaticResource white7}" />
            <Setter Property="BorderWidth" Value="{StaticResource borderSize}" />
            <Setter Property="CornerRadius" Value="{StaticResource defaultCorner}" />
            <Setter Property="VerticalOptions" Value="End" />
        </Style>
        <Style x:Key="flexLayoutStyle" TargetType="FlexLayout">
            <Setter Property="Direction" Value="Row" />
            <Setter Property="HorizontalOptions" Value="CenterAndExpand" />
            <Setter Property="VerticalOptions" Value="Start" />
            <Setter Property="Wrap" Value="Wrap" />
            <Setter Property="AlignContent" Value="Start" />
            <Setter Property="JustifyContent" Value="Center" />
            <Setter Property="AlignItems" Value="Start" />
            <Setter Property="Padding" Value="10,0,10,10" />
        </Style>
    </Application.Resources>
</Application>